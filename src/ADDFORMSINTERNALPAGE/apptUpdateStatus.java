/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ADDFORMSINTERNALPAGE;

import config.dbConnector;
import internalpages.appointment;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import user.desk_dashboard;

/**
 *
 * @author once
 */
public class apptUpdateStatus extends javax.swing.JFrame {

    /** Creates new form apptUpdateStatus */
    public apptUpdateStatus() {
        initComponents();
    }
    
    
     private boolean isAppointmentTimeAvailable(String selectedDate, String selectedTime, String selectedDoctorID) {
    dbConnector dbc = new dbConnector();
    String query = "SELECT COUNT(*) FROM tbl_appointment WHERE date = '" + selectedDate + "' AND time = '" + selectedTime + "' AND u_id = " + selectedDoctorID;
    ResultSet resultSet = null;
    try {
        resultSet = dbc.getData(query);
        if (resultSet.next()) {
            int count = resultSet.getInt(1);
            if (count == 0) {
               
                return true; 
            } else {
             
                JOptionPane.showMessageDialog(null, "This time is already scheduled. Please select another time.", "Time Unavailable", JOptionPane.WARNING_MESSAGE);
                return false;
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    } finally {
        if (resultSet != null) {
            try {
                resultSet.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    return false; 
}
     
     public String getDoctorIDForAppointment(String appointmentID) {
   
       dbConnector dbc = new dbConnector();  
     String doctorID = null;
    String query = "SELECT u_id FROM tbl_appointment WHERE appt_id = '" + appointmentID + "'";

    try {
        ResultSet resultSet = dbc.getData(query);
        if (resultSet.next()) {
            doctorID = resultSet.getString("u_id");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    
    return doctorID;
}
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        apptID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        time = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        calendar = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.setLayout(null);

        apptID.setEditable(false);
        apptID.setBackground(new java.awt.Color(204, 204, 204));
        apptID.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        apptID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        apptID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel2.add(apptID);
        apptID.setBounds(20, 40, 130, 30);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("APPOINTMENT ID");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(20, 20, 140, 18);

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "please select status", "Scheduled", "Canceled" }));
        jPanel2.add(status);
        status.setBounds(20, 140, 150, 50);

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CHANGE STATUS ");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(20, 90, 140, 40);

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DATE");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(270, 20, 70, 20);

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("TIME");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(270, 120, 90, 18);

        time.setBackground(new java.awt.Color(204, 204, 204));
        time.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        time.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        time.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel2.add(time);
        time.setBounds(240, 140, 150, 30);

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SAVE CHANGES");
        jLabel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel6);
        jLabel6.setBounds(140, 230, 180, 30);

        calendar.setDateFormatString("MM/ d/ yyyy");
        jPanel2.add(calendar);
        calendar.setBounds(250, 50, 160, 40);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(40, 50, 440, 290);

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("UPDATE STATUS & DATE/TIME");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(110, 20, 280, 30);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconsImage/chevron_left_FILL0_wght400_GRAD0_opsz48.png"))); // NOI18N
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 10, 50, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked

        Date selectedDateObj = calendar.getDate();
        
        String selectedTime = time.getText();
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        String selectedDate = dateFormat.format(selectedDateObj);
        
      
                   
        dbConnector dbc = new dbConnector();
          String doctorID = getDoctorIDForAppointment(apptID.getText());
         if (doctorID !=null && isAppointmentTimeAvailable(selectedDate, selectedTime, doctorID)) {
        String query = ("UPDATE tbl_appointment SET date ='"+selectedDate+"',time = '"+selectedTime+"',apptStatus ='"+status.getSelectedItem()+"'WHERE appt_id ='"+apptID.getText()+"'");
        boolean result = dbc.insertData(query);
        if(result){
            JOptionPane.showMessageDialog(null, "Successfully Saved!");
        desk_dashboard dDash = new desk_dashboard();
        appointment appt = new appointment();
        dDash.maindesktop.add(appt).setVisible(true);
        this.dispose();
        
        
        }else {
        System.out.println("Saving Data Failed!");
        }
         }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
       
        dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(apptUpdateStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(apptUpdateStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(apptUpdateStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(apptUpdateStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new apptUpdateStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField apptID;
    public com.toedter.calendar.JDateChooser calendar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JComboBox<String> status;
    public javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables

}
