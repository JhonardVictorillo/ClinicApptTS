/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doctors;

import admin.Admin_dashboard;
import config.Session;
import config.dbConnector;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author once
 */
public class ApptList extends javax.swing.JFrame {

    /**
     * Creates new form ApptList
     */
    public ApptList() {
        initComponents();
        
       displaydata(); 
       customizeTable();
    }

private void customizeTable() {
        // Disable cell editing
        apptListtable.setDefaultEditor(Object.class, null);
        apptListtable.getTableHeader().setBackground(Color.decode("#2A629A"));
        
// Customize table header
        Font headerfont = new Font("Verdana",Font.PLAIN,12);
         apptListtable.getTableHeader().setFont(headerfont);
         apptListtable.setRowHeight(25);

        TableCellRenderer renderer = apptListtable.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) renderer;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);
      
    }
    
    
    public void displaydata() {
    try {
        Session sess = Session.getInstance();
        int docid = sess.getId();
        dbConnector dbc = new dbConnector();
        ResultSet rs = dbc.getData("SELECT tbl_appointment.appt_id,tbl_patients.p_firstname,tbl_patients.p_lastname,tbl_appointment.apptType,tbl_appointment.date,tbl_appointment.time ,tbl_userdetails.u_lastname,tbl_userdetails.u_id,tbl_appointment.apptStatus FROM `tbl_appointment` "
              + "INNER JOIN tbl_patients ON tbl_appointment.p_id = tbl_patients.p_id "
              + "INNER JOIN tbl_userdetails ON tbl_appointment.u_id = tbl_userdetails.u_id WHERE tbl_appointment.apptStatus ='Scheduled' AND tbl_userdetails.u_id = " + docid);

        // Create a DefaultTableModel to hold the data
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("APPOINTMENT ID");
        model.addColumn("LASTNAME");
        model.addColumn("FIRSTNAME");
        model.addColumn("DATE");
        model.addColumn("TIME");
        model.addColumn("DOCTOR");
        model.addColumn("STATUS");

        // Populate the table model with data from the ResultSet
        while (rs.next()) {
            // Filter appointments by doctor ID
            if (rs.getInt("u_id") == docid) {
                Object[] rowData = {
                    rs.getInt("appt_id"),
                    rs.getString("p_lastname"),
                    rs.getString("p_firstname"),
                    rs.getString("date"),
                    rs.getString("time"),
                    rs.getString("u_lastname"),
                    rs.getString("apptStatus")
                };
                model.addRow(rowData);
            }
        }

       
        apptListtable.setModel(model);

    
    

    } catch (SQLException ex) {
        System.out.println("Errors:" + ex.getMessage());
    }

}

    
    
    
    
      Color navcolor = new Color(0,204,204);
       Color bodycolor = new Color(0,255,255);
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        apptListtable = new javax.swing.JTable();
        EDITBUT = new javax.swing.JPanel();
        Updatebut = new javax.swing.JLabel();
        REFRESHBUT = new javax.swing.JPanel();
        refresh = new javax.swing.JLabel();
        searchbar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        docID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Appointment list");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(140, 20, 260, 40);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel5.setLayout(null);

        apptListtable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        apptListtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "LASTNAME", "FIRSTNAME", "DATE", "TIME", "DOCTOR", "STATUS"
            }
        ));
        apptListtable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        apptListtable.setRowHeight(25);
        apptListtable.setSelectionBackground(new java.awt.Color(80, 196, 237));
        apptListtable.setShowVerticalLines(false);
        apptListtable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(apptListtable);

        jPanel5.add(jScrollPane1);
        jScrollPane1.setBounds(10, 100, 560, 280);

        EDITBUT.setBackground(new java.awt.Color(0, 255, 255));
        EDITBUT.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        EDITBUT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EDITBUTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EDITBUTMouseExited(evt);
            }
        });
        EDITBUT.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Updatebut.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Updatebut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Updatebut.setText("CONSULTATION");
        Updatebut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdatebutMouseClicked(evt);
            }
        });
        EDITBUT.add(Updatebut, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 100, 30));

        jPanel5.add(EDITBUT);
        EDITBUT.setBounds(30, 50, 120, 30);

        REFRESHBUT.setBackground(new java.awt.Color(0, 255, 255));
        REFRESHBUT.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)));
        REFRESHBUT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                REFRESHBUTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                REFRESHBUTMouseExited(evt);
            }
        });
        REFRESHBUT.setLayout(null);

        refresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refresh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refresh.setText("REFRESH");
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });
        REFRESHBUT.add(refresh);
        refresh.setBounds(10, 0, 70, 30);

        jPanel5.add(REFRESHBUT);
        REFRESHBUT.setBounds(170, 50, 90, 30);

        searchbar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        searchbar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchbarKeyTyped(evt);
            }
        });
        jPanel5.add(searchbar);
        searchbar.setBounds(380, 50, 190, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("SEARCH:");
        jPanel5.add(jLabel2);
        jLabel2.setBounds(380, 20, 80, 17);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(10, 60, 580, 400);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconsImage/chevron_left_FILL0_wght400_GRAD0_opsz48.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 10, 50, 30);

        docID.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        docID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        docID.setText("jLabel4");
        jPanel1.add(docID);
        docID.setBounds(10, 470, 100, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void UpdatebutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdatebutMouseClicked
        int rowindex = apptListtable.getSelectedRow();
        if(rowindex<0){
            JOptionPane.showMessageDialog(null,"Please select an item!");

        }else{
            TableModel model = apptListtable.getModel();
            updateform uForm = new updateform();
            
            uForm.apptID.setText(""+model.getValueAt(rowindex, 0));
            uForm.apptstatus.setSelectedItem(""+model.getValueAt(rowindex,6));
           
       

            uForm.setVisible(true);
            this.dispose();
          
        }
       
        
    }//GEN-LAST:event_UpdatebutMouseClicked

    private void EDITBUTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EDITBUTMouseEntered
        EDITBUT.setBackground(navcolor);
    }//GEN-LAST:event_EDITBUTMouseEntered

    private void EDITBUTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EDITBUTMouseExited
        EDITBUT.setBackground(bodycolor);
    }//GEN-LAST:event_EDITBUTMouseExited

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
         displaydata();
    }//GEN-LAST:event_refreshMouseClicked

    private void REFRESHBUTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_REFRESHBUTMouseEntered
        REFRESHBUT.setBackground(navcolor);
    }//GEN-LAST:event_REFRESHBUTMouseEntered

    private void REFRESHBUTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_REFRESHBUTMouseExited
        REFRESHBUT.setBackground(bodycolor);
    }//GEN-LAST:event_REFRESHBUTMouseExited

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        doctor_dashboard docdash = new doctor_dashboard();
        docdash.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Session sess = Session.getInstance();
        docID.setText("USER ID:"+sess.getId());
       
    }//GEN-LAST:event_formWindowActivated

    private void searchbarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbarKeyTyped
        String query = searchbar.getText().trim();
    int docid = Integer.parseInt(docID.getText().split(":")[1]);
    String searchQuery = "SELECT tbl_appointment.appt_id, tbl_patients.p_firstname, tbl_patients.p_lastname, "
            + "tbl_appointment.apptType, tbl_appointment.date, tbl_appointment.time, "
            + "tbl_userdetails.u_lastname, tbl_userdetails.u_id, tbl_appointment.apptStatus "
            + "FROM tbl_appointment "
            + "INNER JOIN tbl_patients ON tbl_appointment.p_id = tbl_patients.p_id "
            + "INNER JOIN tbl_userdetails ON tbl_appointment.u_id = tbl_userdetails.u_id "
            + "WHERE tbl_userdetails.u_id = " + docid + " "
            + "AND (tbl_appointment.appt_id LIKE '%" + query + "%' "
            + "OR tbl_patients.p_firstname LIKE '%" + query + "%' "
            + "OR tbl_patients.p_lastname LIKE '%" + query + "%')";
    

    
    try {
        dbConnector connect = new dbConnector();
        ResultSet rs = connect.getData(searchQuery);
        
        DefaultTableModel model = (DefaultTableModel) apptListtable.getModel();
        model.setRowCount(0); 
        
        while (rs.next()) {
            Object[] rowData = {
                rs.getInt("appt_id"),
                rs.getString("p_lastname"),
                rs.getString("p_firstname"),
                rs.getString("date"),
                rs.getString("time"),
                rs.getString("u_lastname"),
                rs.getString("apptStatus")
            };
            model.addRow(rowData);
        }
    } catch(SQLException ex) {
        System.out.println("Error searching users: " + ex.getMessage());
    }
    }//GEN-LAST:event_searchbarKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApptList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApptList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApptList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApptList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApptList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EDITBUT;
    private javax.swing.JPanel REFRESHBUT;
    private javax.swing.JLabel Updatebut;
    private javax.swing.JTable apptListtable;
    public javax.swing.JLabel docID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel refresh;
    private javax.swing.JTextField searchbar;
    // End of variables declaration//GEN-END:variables
}
