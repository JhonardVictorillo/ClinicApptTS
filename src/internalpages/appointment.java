/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package internalpages;

import ADDFORMSINTERNALPAGE.*;
import config.dbConnector;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author once
 */
public class appointment extends javax.swing.JInternalFrame {

    /**
     * Creates new form appointment
     */
    public appointment() {
        initComponents();
        
        displaydata();
         this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        customizeTable();
    }
    
    private void customizeTable() {
        // Disable cell editing
        apptTable.setDefaultEditor(Object.class, null);
       apptTable.getTableHeader().setBackground(Color.decode("#2A629A"));
        
        // Customize table header
        Font headerfont = new Font("Verdana",Font.PLAIN,12);
        apptTable.getTableHeader().setFont(headerfont);
        apptTable.setRowHeight(25);

        TableCellRenderer renderer = apptTable.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) renderer;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);
      
    }
    
    
     public void displaydata(){
    try{
      dbConnector DBconnector = new dbConnector();
      ResultSet rs = DBconnector.getData("SELECT tbl_appointment.appt_id,tbl_patients.p_firstname,tbl_patients.p_lastname,tbl_appointment.apptType,tbl_appointment.date,tbl_appointment.time ,tbl_userdetails.u_id,tbl_userdetails.u_firstname,tbl_userdetails.u_lastname,tbl_appointment.apptStatus FROM `tbl_appointment` "
              + "INNER JOIN tbl_patients ON tbl_appointment.p_id = tbl_patients.p_id "
              + "INNER JOIN tbl_userdetails ON tbl_appointment.u_id = tbl_userdetails.u_id;");
      apptTable.setModel(DbUtils.resultSetToTableModel(rs));
    
     TableColumnModel columnModel = apptTable.getColumnModel();
            columnModel.getColumn(0).setHeaderValue("Appointment ID");
            columnModel.getColumn(1).setHeaderValue("First Name");
            columnModel.getColumn(2).setHeaderValue("Last Name");
            columnModel.getColumn(3).setHeaderValue("Type");
            columnModel.getColumn(4).setHeaderValue("Date");
            columnModel.getColumn(5).setHeaderValue("Time");
            columnModel.getColumn(6).setHeaderValue("Doctor ID");
            columnModel.getColumn(7).setHeaderValue("Doctor Firstname");
            columnModel.getColumn(8).setHeaderValue("Doctor Lastname");
            columnModel.getColumn(9).setHeaderValue("Status");
            

            // Refresh the table UI
           apptTable.getTableHeader().repaint();
           
    }catch(SQLException ex){
        System.out.println("Errors:"+ex.getMessage());
    
    }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        apptTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        searchbar = new javax.swing.JTextField();
        ADDBUTTON = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        UPDATEBUTTON = new javax.swing.JPanel();
        Update = new javax.swing.JLabel();
        DELETEBUTTON = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setText("Appointments");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 10, 200, 40);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.setLayout(null);

        apptTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        apptTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "A_ID", "FIRSTNAME", "LASTNAME", "TYPE OF APPOINTMENT", "DOCTORS", "DATE", "TIME", "STATUS"
            }
        ));
        apptTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        apptTable.setRowHeight(25);
        apptTable.setSelectionBackground(new java.awt.Color(80, 196, 237));
        apptTable.setShowVerticalLines(false);
        apptTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(apptTable);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 90, 730, 260);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("SEARCH:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(550, 30, 60, 20);

        searchbar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        searchbar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchbarKeyTyped(evt);
            }
        });
        jPanel2.add(searchbar);
        searchbar.setBounds(550, 50, 170, 30);

        ADDBUTTON.setBackground(new java.awt.Color(0, 204, 204));
        ADDBUTTON.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        ADDBUTTON.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ADD");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        ADDBUTTON.add(jLabel3);
        jLabel3.setBounds(0, 0, 100, 30);

        jPanel2.add(ADDBUTTON);
        ADDBUTTON.setBounds(30, 50, 100, 30);

        UPDATEBUTTON.setBackground(new java.awt.Color(0, 204, 204));
        UPDATEBUTTON.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        UPDATEBUTTON.setLayout(null);

        Update.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        Update.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Update.setText("EDIT");
        Update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateMouseClicked(evt);
            }
        });
        UPDATEBUTTON.add(Update);
        Update.setBounds(0, 0, 100, 30);

        jPanel2.add(UPDATEBUTTON);
        UPDATEBUTTON.setBounds(150, 50, 100, 30);

        DELETEBUTTON.setBackground(new java.awt.Color(0, 204, 204));
        DELETEBUTTON.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.black));
        DELETEBUTTON.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("DELETE");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        DELETEBUTTON.add(jLabel5);
        jLabel5.setBounds(0, 0, 90, 30);

        jPanel2.add(DELETEBUTTON);
        DELETEBUTTON.setBounds(270, 50, 90, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 70, 760, 380);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        addAppointment apptform = new addAppointment();
        apptform.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
 int rowIndex = apptTable.getSelectedRow();
        if(rowIndex<0){
            JOptionPane.showMessageDialog(null,"Please select an item to Delete!");
        }else{
            TableModel model = apptTable.getModel();
            Object value = model.getValueAt(rowIndex,0);
            String id = value.toString();
            int a = JOptionPane.showConfirmDialog(null,"Are you sure to Delete ID:"+id);
            if(a == JOptionPane.YES_OPTION){
                dbConnector dbc = new dbConnector();
                int appt_id = Integer.parseInt(id);
                dbc.DeletedappTData(appt_id,"tbl_appointment");
                displaydata();
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

    private void UpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateMouseClicked
        int rowindex = apptTable.getSelectedRow();
    if(rowindex >= 0) {
        TableModel model = apptTable.getModel();
        apptUpdateStatus aForm = new apptUpdateStatus();
        aForm.apptID.setText(""+model.getValueAt(rowindex, 0));
        
         String dateString = (String) model.getValueAt(rowindex, 4);
        try {
            Date date = new SimpleDateFormat("MM/dd/yyyy").parse(dateString);
            aForm.calendar.setDate(date);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Error parsing date: " + e.getMessage());
        }
        aForm.time.setText(""+model.getValueAt(rowindex, 5));
        aForm.status.setSelectedItem(""+model.getValueAt(rowindex, 9));
        
        aForm.setVisible(true);
        this.dispose();
    } else {
        JOptionPane.showMessageDialog(null, "Please select an item!");
    }

    }//GEN-LAST:event_UpdateMouseClicked

    private void searchbarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbarKeyTyped


    String query = searchbar.getText();
    String searchQuery = "SELECT tbl_appointment.appt_id, tbl_patients.p_firstname, tbl_patients.p_lastname, " +
            "tbl_appointment.apptType, tbl_appointment.date, tbl_appointment.time, tbl_userdetails.u_id, " +
            "tbl_userdetails.u_firstname, tbl_userdetails.u_lastname, tbl_appointment.apptStatus " +
            "FROM tbl_appointment " +
            "INNER JOIN tbl_patients ON tbl_appointment.p_id = tbl_patients.p_id " +
            "INNER JOIN tbl_userdetails ON tbl_appointment.u_id = tbl_userdetails.u_id " +
            "WHERE tbl_appointment.appt_id LIKE '%" + query + "%' " +
            "OR tbl_patients.p_firstname LIKE '%" + query + "%' " +
            "OR tbl_patients.p_lastname LIKE '%" + query + "%'";

    try {
        dbConnector connect = new dbConnector();
        ResultSet rs = connect.getData(searchQuery);
        DefaultTableModel model = (DefaultTableModel) apptTable.getModel();
        model.setRowCount(0); // Clear the existing rows
        
        while (rs.next()) {
            Object[] rowData = {
                rs.getInt("appt_id"),
                rs.getString("p_firstname"),
                rs.getString("p_lastname"),
                rs.getString("apptType"),
                rs.getString("date"),
                rs.getString("time"),
                rs.getString("u_id"),
                rs.getString("u_firstname"),
                rs.getString("u_lastname"),
                rs.getString("apptStatus")
            };
            model.addRow(rowData);
        }

        // Refresh the table UI
        apptTable.getTableHeader().repaint();

    } catch(SQLException ex) {
        System.out.println("Error searching appointments: " + ex.getMessage());

      
    }




    }//GEN-LAST:event_searchbarKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ADDBUTTON;
    private javax.swing.JPanel DELETEBUTTON;
    private javax.swing.JPanel UPDATEBUTTON;
    private javax.swing.JLabel Update;
    private javax.swing.JTable apptTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchbar;
    // End of variables declaration//GEN-END:variables
}
